#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestRestFul
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GAMEDOANSO")]
	public partial class DBGameDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertDAPAN(DAPAN instance);
    partial void UpdateDAPAN(DAPAN instance);
    partial void DeleteDAPAN(DAPAN instance);
    partial void InsertDIEM(DIEM instance);
    partial void UpdateDIEM(DIEM instance);
    partial void DeleteDIEM(DIEM instance);
    partial void InsertLOAICH(LOAICH instance);
    partial void UpdateLOAICH(LOAICH instance);
    partial void DeleteLOAICH(LOAICH instance);
    partial void InsertCAUHOI(CAUHOI instance);
    partial void UpdateCAUHOI(CAUHOI instance);
    partial void DeleteCAUHOI(CAUHOI instance);
    #endregion
		
		public DBGameDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GAMEDOANSOConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBGameDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBGameDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBGameDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBGameDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<DAPAN> DAPANs
		{
			get
			{
				return this.GetTable<DAPAN>();
			}
		}
		
		public System.Data.Linq.Table<DIEM> DIEMs
		{
			get
			{
				return this.GetTable<DIEM>();
			}
		}
		
		public System.Data.Linq.Table<LOAICH> LOAICHes
		{
			get
			{
				return this.GetTable<LOAICH>();
			}
		}
		
		public System.Data.Linq.Table<CAUHOI> CAUHOIs
		{
			get
			{
				return this.GetTable<CAUHOI>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDUser;
		
		private string _MK;
		
		private string _HoTen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUserChanging(string value);
    partial void OnIDUserChanged();
    partial void OnMKChanging(string value);
    partial void OnMKChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MK", DbType="NChar(30)")]
		public string MK
		{
			get
			{
				return this._MK;
			}
			set
			{
				if ((this._MK != value))
				{
					this.OnMKChanging(value);
					this.SendPropertyChanging();
					this._MK = value;
					this.SendPropertyChanged("MK");
					this.OnMKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DAPAN")]
	public partial class DAPAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCH;
		
		private System.Nullable<char> _DapAn1;
		
		private EntityRef<CAUHOI> _CAUHOI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCHChanging(int value);
    partial void OnIDCHChanged();
    partial void OnDapAn1Changing(System.Nullable<char> value);
    partial void OnDapAn1Changed();
    #endregion
		
		public DAPAN()
		{
			this._CAUHOI = default(EntityRef<CAUHOI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCH
		{
			get
			{
				return this._IDCH;
			}
			set
			{
				if ((this._IDCH != value))
				{
					if (this._CAUHOI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCHChanging(value);
					this.SendPropertyChanging();
					this._IDCH = value;
					this.SendPropertyChanged("IDCH");
					this.OnIDCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DapAn", Storage="_DapAn1", DbType="NChar(1)")]
		public System.Nullable<char> DapAn1
		{
			get
			{
				return this._DapAn1;
			}
			set
			{
				if ((this._DapAn1 != value))
				{
					this.OnDapAn1Changing(value);
					this.SendPropertyChanging();
					this._DapAn1 = value;
					this.SendPropertyChanged("DapAn1");
					this.OnDapAn1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAUHOI_DAPAN", Storage="_CAUHOI", ThisKey="IDCH", OtherKey="IDCH", IsForeignKey=true)]
		public CAUHOI CAUHOI
		{
			get
			{
				return this._CAUHOI.Entity;
			}
			set
			{
				if ((this._CAUHOI.Entity != value))
				{
					this.SendPropertyChanging();
					this._CAUHOI.Entity = value;
					this.SendPropertyChanged("CAUHOI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIEM")]
	public partial class DIEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDUser;
		
		private System.Nullable<int> _DIEM1;
		
		private string _IDLoai;
		
		private EntityRef<User> _User;
		
		private EntityRef<LOAICH> _LOAICH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUserChanging(string value);
    partial void OnIDUserChanged();
    partial void OnDIEM1Changing(System.Nullable<int> value);
    partial void OnDIEM1Changed();
    partial void OnIDLoaiChanging(string value);
    partial void OnIDLoaiChanged();
    #endregion
		
		public DIEM()
		{
			this._User = default(EntityRef<User>);
			this._LOAICH = default(EntityRef<LOAICH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DIEM", Storage="_DIEM1", DbType="Int")]
		public System.Nullable<int> DIEM1
		{
			get
			{
				return this._DIEM1;
			}
			set
			{
				if ((this._DIEM1 != value))
				{
					this.OnDIEM1Changing(value);
					this.SendPropertyChanging();
					this._DIEM1 = value;
					this.SendPropertyChanged("DIEM1");
					this.OnDIEM1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoai", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDLoai
		{
			get
			{
				return this._IDLoai;
			}
			set
			{
				if ((this._IDLoai != value))
				{
					if (this._LOAICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiChanging(value);
					this.SendPropertyChanging();
					this._IDLoai = value;
					this.SendPropertyChanged("IDLoai");
					this.OnIDLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DIEM", Storage="_User", ThisKey="IDUser", OtherKey="IDUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				if ((this._User.Entity != value))
				{
					this.SendPropertyChanging();
					this._User.Entity = value;
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAICH_DIEM", Storage="_LOAICH", ThisKey="IDLoai", OtherKey="IDLoai", IsForeignKey=true)]
		public LOAICH LOAICH
		{
			get
			{
				return this._LOAICH.Entity;
			}
			set
			{
				if ((this._LOAICH.Entity != value))
				{
					this.SendPropertyChanging();
					this._LOAICH.Entity = value;
					this.SendPropertyChanged("LOAICH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAICH")]
	public partial class LOAICH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDLoai;
		
		private string _TenLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLoaiChanging(string value);
    partial void OnIDLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LOAICH()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoai", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDLoai
		{
			get
			{
				return this._IDLoai;
			}
			set
			{
				if ((this._IDLoai != value))
				{
					this.OnIDLoaiChanging(value);
					this.SendPropertyChanging();
					this._IDLoai = value;
					this.SendPropertyChanged("IDLoai");
					this.OnIDLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(20)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAUHOI")]
	public partial class CAUHOI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCH;
		
		private string _NoiDung;
		
		private string _CauA;
		
		private string _CauB;
		
		private string _CauC;
		
		private string _CauD;
		
		private string _IDLoai;
		
		private EntityRef<LOAICH> _LOAICH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCHChanging(int value);
    partial void OnIDCHChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnCauAChanging(string value);
    partial void OnCauAChanged();
    partial void OnCauBChanging(string value);
    partial void OnCauBChanged();
    partial void OnCauCChanging(string value);
    partial void OnCauCChanged();
    partial void OnCauDChanging(string value);
    partial void OnCauDChanged();
    partial void OnIDLoaiChanging(string value);
    partial void OnIDLoaiChanged();
    #endregion
		
		public CAUHOI()
		{
			this._LOAICH = default(EntityRef<LOAICH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCH
		{
			get
			{
				return this._IDCH;
			}
			set
			{
				if ((this._IDCH != value))
				{
					this.OnIDCHChanging(value);
					this.SendPropertyChanging();
					this._IDCH = value;
					this.SendPropertyChanged("IDCH");
					this.OnIDCHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauA", DbType="NVarChar(200)")]
		public string CauA
		{
			get
			{
				return this._CauA;
			}
			set
			{
				if ((this._CauA != value))
				{
					this.OnCauAChanging(value);
					this.SendPropertyChanging();
					this._CauA = value;
					this.SendPropertyChanged("CauA");
					this.OnCauAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauB", DbType="NVarChar(200)")]
		public string CauB
		{
			get
			{
				return this._CauB;
			}
			set
			{
				if ((this._CauB != value))
				{
					this.OnCauBChanging(value);
					this.SendPropertyChanging();
					this._CauB = value;
					this.SendPropertyChanged("CauB");
					this.OnCauBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauC", DbType="NVarChar(200)")]
		public string CauC
		{
			get
			{
				return this._CauC;
			}
			set
			{
				if ((this._CauC != value))
				{
					this.OnCauCChanging(value);
					this.SendPropertyChanging();
					this._CauC = value;
					this.SendPropertyChanged("CauC");
					this.OnCauCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauD", DbType="NVarChar(200)")]
		public string CauD
		{
			get
			{
				return this._CauD;
			}
			set
			{
				if ((this._CauD != value))
				{
					this.OnCauDChanging(value);
					this.SendPropertyChanging();
					this._CauD = value;
					this.SendPropertyChanged("CauD");
					this.OnCauDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoai", DbType="NChar(10)")]
		public string IDLoai
		{
			get
			{
				return this._IDLoai;
			}
			set
			{
				if ((this._IDLoai != value))
				{
					if (this._LOAICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiChanging(value);
					this.SendPropertyChanging();
					this._IDLoai = value;
					this.SendPropertyChanged("IDLoai");
					this.OnIDLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAICH_CAUHOI", Storage="_LOAICH", ThisKey="IDLoai", OtherKey="IDLoai", IsForeignKey=true)]
		public LOAICH LOAICH
		{
			get
			{
				return this._LOAICH.Entity;
			}
			set
			{
				if ((this._LOAICH.Entity != value))
				{
					this.SendPropertyChanging();
					this._LOAICH.Entity = value;
					this.SendPropertyChanged("LOAICH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
